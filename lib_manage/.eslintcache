[{"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\history.js":"1","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Electioncard\\Electioncard.js":"2","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Admin\\Admin_Votes.js":"3","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Flip.js":"4","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\App.js":"5","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Card\\Teamcard.js":"6","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Teampage\\Teampage.js":"7","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Footer\\Footer.js":"8","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Ticker.js":"9","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Admin\\Admin_Important_Dates.js":"10","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\index.js":"11","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Homedetails\\Homedetails.js":"12","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Empty\\Empty.js":"13","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Admin\\Admin.js":"14","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Printer\\Printer.js":"15"},{"size":87,"mtime":1606919134482,"results":"16","hashOfConfig":"17"},{"size":8443,"mtime":1606919134325,"results":"18","hashOfConfig":"17"},{"size":25391,"mtime":1606919134312,"results":"19","hashOfConfig":"17"},{"size":851,"mtime":1606919134478,"results":"20","hashOfConfig":"17"},{"size":16278,"mtime":1607019920641,"results":"21","hashOfConfig":"17"},{"size":1666,"mtime":1606919134319,"results":"22","hashOfConfig":"17"},{"size":4479,"mtime":1607017980086,"results":"23","hashOfConfig":"17"},{"size":3583,"mtime":1606919134341,"results":"24","hashOfConfig":"17"},{"size":771,"mtime":1606919134475,"results":"25","hashOfConfig":"17"},{"size":3737,"mtime":1606919134308,"results":"26","hashOfConfig":"17"},{"size":689,"mtime":1606919134486,"results":"27","hashOfConfig":"17"},{"size":6321,"mtime":1606919134345,"results":"28","hashOfConfig":"17"},{"size":157,"mtime":1606919134336,"results":"29","hashOfConfig":"17"},{"size":3423,"mtime":1606919134307,"results":"30","hashOfConfig":"17"},{"size":2384,"mtime":1607023731673,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vb3i1z",{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\history.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Electioncard\\Electioncard.js",["66","67","68"],"import React from \"react\";\r\nimport \"./Electioncard.css\";\r\nimport Reveal from \"react-reveal/Reveal\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport votebanner from \"./votepage.png\"; // with import\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CollapsibleComponent,\r\n  CollapsibleHead,\r\n  CollapsibleContent,\r\n} from \"react-collapsible-component\";\r\nimport OnImagesLoaded from 'react-on-images-loaded';\r\n\r\nclass Electioncard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.showLoader();\r\n    this.candbutton = this.candbutton.bind(this);\r\n    this.candI = this.candI.bind(this);\r\n    this.state = {\r\n      showImages: false,\r\n      opened: false,\r\n    };\r\n  }\r\n\r\n  candbutton = (event) => {\r\n    console.log(event.target.dataset.elecindex, event.target.dataset.candindex);\r\n    Swal.fire({\r\n      title: \"Cast Vote?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\"Success!\", \"Your vote has been casted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  candI = (event) => {\r\n    event.stopPropagation();\r\n    console.log(event.target.dataset.elecindex, event.target.dataset.candindex);\r\n    Swal.fire({\r\n      title: \"Hello there\",\r\n      text: \"Modify me!\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <OnImagesLoaded\r\n        onLoaded={() => {\r\n          this.setState({ showImages: true });\r\n          this.props.hideLoader();\r\n        }}\r\n        onTimeout={() => {\r\n          this.setState({ showImages: true });\r\n          this.props.hideLoader();\r\n        }}\r\n        timeout={7000}\r\n      >\r\n        <div style={{ opacity: this.state.showImages ? 1 : 0 }}>\r\n          <div className=\"elecdesk\">\r\n            <div className=\"topbanner\">\r\n              <div className=\"titleban\">\r\n                {\" \"}\r\n            Voting page\r\n            <p>\r\n                  Vote for the following positions according to your voting rights.\r\n            </p>\r\n              </div>\r\n              <img src={votebanner} className=\"topbannerimg\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"elecmobile\">\r\n            <div className=\"topbanner\">\r\n              <img src={votebanner} className=\"topbannerimg\" />\r\n\r\n              <div className=\"titleban\">\r\n                {\" \"}\r\n            Voting page\r\n            <p>\r\n                  Vote for the following positions according to your voting rights.\r\n            </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"forthemeelec\">\r\n            <div className=\"cont\">\r\n              <CollapsibleComponent>\r\n                <div>\r\n                  <CollapsibleHead className=\"elecbar\" >\r\n                    <div className=\"elecname\">General Seceratory Sports</div>\r\n                  </CollapsibleHead>\r\n                  <CollapsibleContent isExpanded={true}>\r\n                    <Fade top opposite={true}>\r\n                      <div className=\"eleccard\">\r\n                        <div\r\n                          className=\"candidate\"\r\n                          data-elecindex=\"1\"\r\n                          data-candindex=\"190010029\"\r\n                          onClick={this.candbutton}\r\n                        >\r\n                          <div className=\"candimg\">\r\n                            <img\r\n                              src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1820405/profile/profile-512.jpg?1533058950\"\r\n                              alt=\"Albert Einstein\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"candname\">Omkar Dnyaneshwar Jadhav</div>\r\n                          <div className=\"cdinf\"><i className=\"fa fa-info-circle\" aria-hidden=\"true\" onClick={this.candI}></i></div>\r\n                          <div className=\"lock\"></div>\r\n                        </div>\r\n                        <div className=\"candidate\">\r\n                          <div className=\"candimg\">\r\n                            <img\r\n                              src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1820405/profile/profile-512.jpg?1533058950\"\r\n                              alt=\"Albert Einstein\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"candname\"></div>\r\n                          <div className=\"btnlock\"></div>\r\n                        </div>\r\n                        <div\r\n                          className=\"candidate\"\r\n                          data-elecindex=\"2\"\r\n                          onClick={this.candbutton}\r\n                        >\r\n                          <div className=\"candimg\">\r\n                            <img\r\n                              src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1820405/profile/profile-512.jpg?1533058950\"\r\n                              alt=\"Albert Einstein\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"candname\"></div>\r\n                          <div className=\"btnlock\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </Fade>\r\n                  </CollapsibleContent>\r\n                </div>\r\n                <div>\r\n                  <CollapsibleHead className=\"elecbar\">\r\n                    <div className=\"elecname\">Election 1</div>\r\n                    <div className=\"elecrights\"></div>\r\n                  </CollapsibleHead>\r\n                  <CollapsibleContent>\r\n                    <Fade top>\r\n                      <div className=\"eleccard\">\r\n                        <div className=\"candidate\">\r\n                          <div className=\"candimg\">\r\n                            <img\r\n                              src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1820405/profile/profile-512.jpg?1533058950\"\r\n                              alt=\"Albert Einstein\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"candname\">Omkar Dnyaneshwar Jadhav</div>\r\n                          <div className=\"cdinf\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></div>\r\n\r\n                          <div className=\"lock unlocked\"></div>\r\n                        </div>\r\n                        <div className=\"candidate\">\r\n                          <div className=\"candimg\">\r\n                            <img\r\n                              src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1820405/profile/profile-512.jpg?1533058950\"\r\n                              alt=\"Albert Einstein\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"candname\"></div>\r\n                          <div className=\"btnlock\"></div>\r\n                        </div>\r\n                        <div className=\"candidate\">\r\n                          <div className=\"candimg\">\r\n                            <img\r\n                              src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1820405/profile/profile-512.jpg?1533058950\"\r\n                              alt=\"Albert Einstein\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"candname\"></div>\r\n                          <div className=\"btnlock\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </Fade>\r\n                  </CollapsibleContent>\r\n                </div>\r\n                <CollapsibleHead className=\"elecbar\">\r\n                  <div className=\"elecname\">Election 2</div>\r\n                  <div className=\"elecrights\"></div>\r\n                </CollapsibleHead>\r\n                <CollapsibleContent>\r\n                  <div className=\"eleccard\">\r\n                    <div className=\"candidate\">\r\n                      <div className=\"candimg\"></div>\r\n                      <div className=\"candname\"></div>\r\n                      <div className=\"btnlock\"></div>\r\n                    </div>\r\n                  </div>\r\n                </CollapsibleContent>\r\n              </CollapsibleComponent>\r\n            </div>\r\n            <div className=\"bottombanner\"></div>\r\n\r\n          </div>\r\n        </div>\r\n      </OnImagesLoaded>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Electioncard;\r\n",["69","70"],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Admin\\Admin_Votes.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Flip.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\App.js",["71","72"],"import React, { Component } from \"react\";\r\nimport logo from \"./Components/Homedetails/logog.png\"; // with import\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Teampage from \"./Components/Teampage/Teampage\";\r\nimport Electioncard from \"./Components/Electioncard/Electioncard\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport history from './history';\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Homedetails from \"./Components/Homedetails/Homedetails\";\r\nimport Empty from \"./Components/Empty/Empty\";\r\n\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport OnImagesLoaded from \"react-on-images-loaded\";\r\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\r\nimport Admin from \"./Components/Admin/Admin\";\r\nimport Printer from \"./Components/Printer/Printer.js\";\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n      isSigned: false,\r\n      isAdmin: false,\r\n      isVoter: false,\r\n      tokenId: \"\",\r\n      authRes: \"\",\r\n      expanded: false,\r\n    };\r\n    // eslint-disable-next-line no-func-assign\r\n\r\n  }\r\n  refreshToken = (oldres) => {\r\n    oldres.reloadAuthResponse().then((res) => {\r\n      this.setState({ tokenId: res.id_token });\r\n    });\r\n  };\r\n\r\n  signInOnSuccess = (res) => {\r\n    this.setState({\r\n      isSigned: true,\r\n      tokenId: res.tokenId,\r\n      authRes: res,\r\n    });\r\n\r\n    var refresh = setInterval(\r\n      this.refreshToken(res),\r\n      Number(this.state.authRes.tokenObj.expires_in) * 60000\r\n    );\r\n\r\n    this.setState({ refresh: refresh });\r\n\r\n    this.isAdmin();\r\n\r\n  };\r\n  signInOnError = (err) => {\r\n    console.log(err);\r\n    setError(\"Unable to Sign In Please Try Again\", true);\r\n  };\r\n\r\n  signOutOnError = (err) => {\r\n    console.log(err);\r\n    setError(\"Unable to Sign Out Please Try Again\", true);\r\n  };\r\n\r\n  signOutOnSuccess = () => {\r\n    this.setState({\r\n      isSigned: false,\r\n      tokenId: \"\",\r\n      authRes: \"\",\r\n      isAdmin: false,\r\n      isVoter: false,\r\n    });\r\n    clearInterval(this.state.refresh);\r\n\r\n    setInfo({\r\n      isAdmin: this.state.isAdmin,\r\n      isSigned: this.state.isSigned,\r\n      tokenId: this.state.tokenId,\r\n    });\r\n  };\r\n\r\n  async isAdmin() {\r\n    if (this.state.tokenId.length) {\r\n      await fetch(\r\n        \"https://election-website-test.herokuapp.com/userType?tokenId=\" +\r\n        this.state.tokenId\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((user) => {\r\n\r\n          if (user.type === \"adminANDvoter\") {\r\n            this.setState({ isAdmin: true, isVoter: true });\r\n          } else if (user.type === \"admin\") {\r\n            this.setState({ isAdmin: true, isVoter: false });\r\n          } else if (user.type === \"voter\") {\r\n            this.setState({ isAdmin: false, isVoter: true });\r\n          } else {\r\n            this.setState({ isAdmin: false, isVoter: false });\r\n          }\r\n        })\r\n        .then(() => {\r\n          setInfo({\r\n            isAdmin: this.state.isAdmin,\r\n            isVoter: this.state.isVoter,\r\n            isSigned: this.state.isSigned,\r\n            tokenId: this.state.tokenId,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() { }\r\n\r\n  render() {\r\n    let styles = {\r\n      zIndex: 10,\r\n    };\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          expanded={this.state.expanded}\r\n          collapseOnSelect\r\n          expand=\"lg\"\r\n          variant=\"light\"\r\n          className=\"NavBar\"\r\n        >\r\n          <NavLink to=\"\" style={styles}>\r\n            <img src={logo} className=\"logonav\" alt=\"IIT Dh Elections\" />\r\n          </NavLink>\r\n\r\n          <Navbar.Toggle\r\n            onClick={() => {\r\n              if (this.state.expanded === \"expanded\")\r\n                this.setState({ expanded: false });\r\n              else this.setState({ expanded: \"expanded\" });\r\n            }}\r\n            aria-controls=\"responsive-navbar-nav\"\r\n          />\r\n\r\n          <Navbar.Collapse\r\n            id=\"responsive-navbar-nav\"\r\n            className=\"NavBar navbar-toggle\"\r\n          >\r\n            <Nav className=\"navbar-collapse justify-content-end\">\r\n              {this.state.isAdmin && this.state.isSigned ? (\r\n                <NavLink\r\n                  to=\"/admin\"\r\n                  className=\"NavLink nav-link\"\r\n                  style={styles}\r\n                  activeClassName=\"selected\"\r\n                  onClick={() => this.setState({ expanded: false })}\r\n                >\r\n                  <div className=\"secondary_Text\">Admin</div>\r\n                </NavLink>\r\n              ) : (\r\n                  \"\"\r\n                )}\r\n\r\n              {this.state.isSigned ? (\r\n                <>\r\n                  <Nav.Link\r\n                    onClick={() => {\r\n                      setShowAccount(true);\r\n                    }}\r\n                    className=\"NavLink nav-link\"\r\n                  >\r\n                    <div className=\"secondary_Text\">Profile</div>\r\n                  </Nav.Link>\r\n                </>\r\n              ) : (\r\n                  \"\"\r\n                )}\r\n              <NavLink\r\n                to=\"/library\"\r\n                className=\"NavLink nav-link\"\r\n                style={styles}\r\n                activeClassName=\"selected\"\r\n                onClick={() => this.setState({ expanded: false })}\r\n              >\r\n                <div className=\"secondary_Text\">Library</div>\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/printmg\"\r\n                className=\"NavLink nav-link\"\r\n                style={styles}\r\n                activeClassName=\"selected\"\r\n                onClick={() => this.setState({ expanded: false })}\r\n              >\r\n                <div className=\"secondary_Text\">Printer</div>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/team\"\r\n                className=\"NavLink nav-link\"\r\n                style={styles}\r\n                activeClassName=\"selected\"\r\n                onClick={() => this.setState({ expanded: false })}\r\n              >\r\n                <div className=\"secondary_Text\">Team</div>\r\n              </NavLink>\r\n            </Nav>\r\n\r\n            <Nav fill>\r\n              <Nav.Link>\r\n                {!this.state.isSigned ? (\r\n                  <GoogleLogin\r\n                    clientId=\"352037303035-ld3gu55gulckmeo1m573kt8qocth524o.apps.googleusercontent.com\"\r\n                    render={(renderProps) => (\r\n                      <Button\r\n                        className=\"Button\"\r\n                        onClick={renderProps.onClick}\r\n                        disabled={renderProps.disabled}\r\n                      >\r\n                        SIGN IN\r\n                      </Button>\r\n                    )}\r\n                    buttonText={this.state.value}\r\n                    onSuccess={this.signInOnSuccess}\r\n                    onFailure={this.signInOnError}\r\n                    cookiePolicy={\"single_host_origin\"}\r\n                    hostedDomain=\"iitdh.ac.in\"\r\n                    isSignedIn={true}\r\n                  />\r\n                ) : (\r\n                    <GoogleLogout\r\n                      clientId=\"352037303035-ld3gu55gulckmeo1m573kt8qocth524o.apps.googleusercontent.com\"\r\n                      render={(renderProps) => (\r\n                        <Button\r\n                          className=\"Button\"\r\n                          onClick={renderProps.onClick}\r\n                          disabled={renderProps.disabled}\r\n                        >\r\n                          SIGN OUT\r\n                        </Button>\r\n                      )}\r\n                      buttonText={this.state.value}\r\n                      onLogoutSuccess={this.signOutOnSuccess}\r\n                      onFailure={this.signOutOnError}\r\n                      hostedDomain=\"iitdh.ac.in\"\r\n                      isSignedIn={true}\r\n                    />\r\n                  )}\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Error extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  Error = () => {\r\n    const handleClose = () => setError(\"\", false);\r\n\r\n    return (\r\n      <>\r\n        <Modal show={this.props.showError} onHide={handleClose}>\r\n          <Modal.Header className=\"errorheader\">\r\n            <i className=\"material-icons erroricon\">error_outline</i>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <div className=\"ooops\">Ooops!</div>\r\n            <h6 className=\"error\">{this.props.msg}</h6>\r\n          </Modal.Body>\r\n\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"errorclose\"\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </Button>\r\n          <br />\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n  render() {\r\n    return <div>{this.Error()}</div>;\r\n  }\r\n}\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tokenId: this.props.tokenId,\r\n      isVoter: this.props.isVoter,\r\n      show: this.props.show,\r\n      details: {\r\n        voter_rights: [],\r\n      },\r\n    };\r\n    // eslint-disable-next-line no-func-assign\r\n    fetchDetails = fetchDetails.bind(this);\r\n  }\r\n  showpos = () => {\r\n    return (\r\n      <ul>\r\n        {this.state.details.voter_rights.map((pos, i) => (\r\n          <li key={i}>{pos.elec_name}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      this.state.tokenId !== this.props.tokenId ||\r\n      this.state.isVoter !== this.props.isVoter\r\n    ) {\r\n      this.getDetails();\r\n    }\r\n\r\n  }\r\n  async getDetails() {\r\n    if (this.props.tokenId.length) {\r\n      await fetch(\r\n        \"https://election-website-test.herokuapp.com/accountdetails?tokenId=\" +\r\n        this.props.tokenId\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((users) => {\r\n          this.setState({ tokenId: this.props.tokenId, isVoter: this.props.isVoter, details: users[0] });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.props.show}\r\n          onHide={() => {\r\n            setShowAccount(false);\r\n          }}\r\n          animation={true}\r\n          size=\"lg\"\r\n          centered\r\n        >\r\n          <Modal.Header className=\"profileheadparent\">\r\n            <div className=\"profilehead\">Profile</div>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container>\r\n              <Row xs={1} md={2} lg={2}>\r\n                <Col>\r\n                  <div className=\"accountbasics\">\r\n                    <div className=\"accountheading\">\r\n                      Name\r\n                      <br />\r\n                    </div>\r\n                    {this.state.details.voter_name}\r\n                    <br />\r\n                    <div className=\"accountheading\">\r\n                      Branch\r\n                      <br />\r\n                    </div>\r\n                    {this.state.details.voter_branch}\r\n                    <br />\r\n                    <div className=\"accountheading\">\r\n                      Roll No\r\n                      <br />\r\n                    </div>\r\n                    {this.state.details.voter_id}\r\n                    <br />\r\n                  </div>\r\n                  <br />\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"accountposElement\">\r\n                    <div className=\"accountheading\">\r\n                      Eligible Voting Positions\r\n                      <br />\r\n                    </div>\r\n                    {this.showpos()}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Modal.Body>\r\n          <div className=\"profileclosebtnparent\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              className=\"profileclosebtn\"\r\n              onClick={() => {\r\n                setShowAccount(false);\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: \"\",\r\n      showError: false,\r\n      showAccount: false,\r\n      showImages: false,\r\n      currenttab: \"/\",\r\n      isSigned: false,\r\n      isAdmin: false,\r\n      isVoter: false,\r\n      tokenId: \"\",\r\n    };\r\n    // eslint-disable-next-line no-func-assign\r\n    setInfo = setInfo.bind(this);\r\n    // eslint-disable-next-line no-func-assign\r\n    setError = setError.bind(this);\r\n    // eslint-disable-next-line no-func-assign\r\n    setShowAccount = setShowAccount.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <OnImagesLoaded\r\n        onLoaded={() => {\r\n          this.setState({ showImages: true });\r\n          this.props.hideLoader();\r\n        }}\r\n        onTimeout={() => {\r\n          this.setState({ showImages: true });\r\n          this.props.hideLoader();\r\n        }}\r\n        timeout={7000}\r\n      >\r\n        <Router onUpdate={() => window.scrollTo(0, 0)} history={history}>\r\n          <NavBar loginState={this.state.loginState} />\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              render={withRouter((props) => (\r\n                <Homedetails\r\n                  {...props}\r\n                  hideLoader={this.props.hideLoader}\r\n                  showLoader={this.props.showLoader}\r\n                />\r\n              ))}\r\n            />\r\n            <Route\r\n              path=\"/admin\"\r\n              render={(props) => (\r\n                <Empty\r\n                  {...props}\r\n                  hideLoader={this.props.hideLoader}\r\n                  showLoader={this.props.showLoader}\r\n                  isSigned={this.state.isSigned}\r\n                  isAdmin={this.state.isAdmin}\r\n                  tokenId={this.state.tokenId}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/library\"\r\n              exact component={withRouter((props) => (\r\n                <Empty\r\n                  {...props}\r\n                  hideLoader={this.props.hideLoader}\r\n                  showLoader={this.props.showLoader}\r\n                />\r\n              ))}\r\n            />\r\n            <Route\r\n              path=\"/printmg\"\r\n              exact\r\n              render={(props) => (\r\n                <Printer\r\n                  {...props}\r\n                  hideLoader={this.props.hideLoader}\r\n                  showLoader={this.props.showLoader}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/team\"\r\n              render={(props) => (\r\n                <Teampage\r\n                  {...props}\r\n                  hideLoader={this.props.hideLoader}\r\n                  showLoader={this.props.showLoader}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n          <Error msg={this.state.error} showError={this.state.showError} />\r\n          <Account\r\n            show={this.state.showAccount}\r\n            tokenId={this.state.tokenId}\r\n          />\r\n          <Footer style={{ opacity: this.state.showImages ? 1 : 0 }} />\r\n        </Router>\r\n      </OnImagesLoaded>\r\n    );\r\n  }\r\n}\r\n\r\nfunction setError(val, state) {\r\n  this.setState({ showError: state });\r\n  this.setState({ error: val });\r\n}\r\nfunction setShowAccount(val) {\r\n  this.setState({ showAccount: val });\r\n}\r\nfunction setInfo(val) {\r\n  this.setState({\r\n    tokenId: val.tokenId,\r\n    isAdmin: val.isAdmin,\r\n    isSigned: val.isSigned,\r\n  });\r\n}\r\nfunction fetchDetails(refresh) {\r\n  if (this.state.tokenId.length && this.state.details.voter_rights.length) {\r\n    if (refresh === 1) {\r\n      this.getDetails();\r\n    }\r\n    return this.state.details;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport default withRouter(App);\r\n// export  App, showModel, fetchDetails };\r\n","C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Card\\Teamcard.js",["73","74","75"],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Teampage\\Teampage.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Footer\\Footer.js",["76","77","78","79"],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Ticker.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Admin\\Admin_Important_Dates.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\index.js",["80","81","82","83"],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Homedetails\\Homedetails.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Empty\\Empty.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Admin\\Admin.js",[],"C:\\Users\\jprat\\Desktop\\SSL_Project\\lib_manage\\src\\Components\\Printer\\Printer.js",["99","100"],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Printer.css\";\r\nimport \"C://Users//jprat//Desktop//SSL_Project//lib_manage//node_modules//bootstrap//dist//css//bootstrap.min.css\";\r\n\r\nfunction Printer(props) {\r\n\r\n\tconst printingSpeci_ph = \"Pages 1 - 4 EXCEPT Page 3 (Custom Text) \";\r\n\tconst genInstruc_ph = \"General Instructions about the Print\";\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h1 className=\"header\">Hassle free Printing</h1>\r\n\r\n\t\t\t<form className=\"formClass\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"uploadingFiles\">Upload Files to Print</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input type=\"file\" multiple />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"color\">Color</label>\r\n\t\t\t\t\t<select className=\"form-control\" style={{ width: \"50%\" }} id=\"color\">\r\n\t\t\t\t\t\t<option value=\"b/w\">Black and White</option>\r\n\t\t\t\t\t\t<option value=\"color\">Color</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"paperSize\">Paper Size</label>\r\n\t\t\t\t\t<select className=\"form-control\" style={{ width: \"50%\" }} id=\"paperSize\">\r\n\t\t\t\t\t\t<option value=\"A3\">A3</option>\r\n\t\t\t\t\t\t<option value=\"A4\">A4</option>\r\n\t\t\t\t\t\t<option value=\"A5\">A5</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"copies\">Copies</label>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"number\" style={{ width: \"50%\" }} placeholder=\"Number of Copies\"></input>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label for=\"bothSides\">Print on Both Sides</label>\r\n\t\t\t\t\t<select className=\"form-control\" style={{ width: \"50%\" }} id=\"paperSize\">\r\n\t\t\t\t\t\t<option value=\"Yes\">Yes</option>\r\n\t\t\t\t\t\t<option value=\"No\">No</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"printingDetails\">Printing Details</label>\r\n\t\t\t\t\t<textarea class=\"form-control\" rows=\"3\" style={{ width: \"50%\" }} placeholder = {printingSpeci_ph}></textarea>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"genInstruc\">General Instructions</label>\r\n\t\t\t\t\t<textarea class=\"form-control\" rows=\"3\" style={{ width: \"50%\" }} placeholder = {genInstruc_ph}></textarea>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<button className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" >\r\n\t\t\t\t\t\tPrint\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Printer;\r\n",{"ruleId":"101","severity":1,"message":"102","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":75,"column":15,"nodeType":"107","endLine":75,"endColumn":64},{"ruleId":"105","severity":1,"message":"106","line":81,"column":15,"nodeType":"107","endLine":81,"endColumn":64},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"101","severity":1,"message":"112","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":20},{"ruleId":"101","severity":1,"message":"113","line":27,"column":8,"nodeType":"103","messageId":"104","endLine":27,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"114","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":58,"column":7,"nodeType":"107","endLine":58,"endColumn":108},{"ruleId":"101","severity":1,"message":"102","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"114","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":13,"column":15,"nodeType":"107","endLine":13,"endColumn":59},{"ruleId":"105","severity":1,"message":"106","line":56,"column":15,"nodeType":"107","endLine":56,"endColumn":59},{"ruleId":"101","severity":1,"message":"115","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":20},{"ruleId":"101","severity":1,"message":"116","line":11,"column":3,"nodeType":"103","messageId":"104","endLine":11,"endColumn":8},{"ruleId":"101","severity":1,"message":"117","line":12,"column":3,"nodeType":"103","messageId":"104","endLine":12,"endColumn":9},{"ruleId":"101","severity":1,"message":"118","line":13,"column":3,"nodeType":"103","messageId":"104","endLine":13,"endColumn":10},{"ruleId":"101","severity":1,"message":"119","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":15},{"ruleId":"101","severity":1,"message":"120","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":16},{"ruleId":"101","severity":1,"message":"121","line":10,"column":8,"nodeType":"103","messageId":"104","endLine":10,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":14},{"ruleId":"101","severity":1,"message":"122","line":13,"column":8,"nodeType":"103","messageId":"104","endLine":13,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":24,"column":5,"nodeType":"103","messageId":"125","endLine":24,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":57,"column":15,"nodeType":"107","endLine":57,"endColumn":53},{"ruleId":"126","severity":1,"message":"127","line":59,"column":17,"nodeType":"107","endLine":59,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":65,"column":19,"nodeType":"107","endLine":65,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":73,"column":19,"nodeType":"107","endLine":73,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":81,"column":19,"nodeType":"107","endLine":81,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":89,"column":19,"nodeType":"107","endLine":89,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":120,"column":19,"nodeType":"107","endLine":120,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":130,"column":17,"nodeType":"107","endLine":130,"endColumn":59},{"ruleId":"105","severity":1,"message":"106","line":145,"column":17,"nodeType":"107","endLine":145,"endColumn":63},{"ruleId":"101","severity":1,"message":"128","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"129","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},"no-unused-vars","'Reveal' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"'Electioncard' is defined but never used.","'Admin' is defined but never used.","'Fade' is defined but never used.","'withRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'NavLink' is defined but never used.","'history' is defined but never used.","'Renderer' is defined but never used.","'Countdown' is defined but never used.","'VisibilitySensor' is defined but never used.","no-func-assign","'stateChange' is a function.","isAFunction","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]